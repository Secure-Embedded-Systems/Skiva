#!/usr/bin/perl


=head

    This scripts compiles (and runs if passed the argument "run") AES
    for every combination of D, Rs and Rt.

    The "run" argument only makes sense (and does something) on X86.

    Use the "X86" argument to compile for X86 rather than SKIVA.

    Use the argument "clean" to remove the binaries generated by a
    previous run of this script.

=cut


use strict;
use warnings;
use feature 'say';

use FindBin;
chdir "$FindBin::Bin/..";

mkdir "bin" unless -d "bin";

my $x86 = "@ARGV" =~ /X86/;
my $run = "@ARGV" =~ /run/;
my $clean = "@ARGV" =~ /clean/;

for my $fd (1, 2, 4) {
    for my $ti (1, 2, 4) {
        for my $rt (1, 2) {
            my $pipe_opt = $rt == 1 ? "" : "-D PIPELINED";
            my $pipe = $rt == 1 ? "" : "_P";
            my $name = "main_${ti}_${fd}$pipe";
            my $bin = "bin/$name";
            if ($clean) {
                unlink $bin;
                next;
            }
            say "Compiling FD=$fd TI=$ti Rt=$rt";
            if ($ARGV[0] && $ARGV[0] eq "X86") {
                system qq{gcc -Wno-unused-function -Wall -Wextra -Iarch -D X86 -O3 -D COMPACT -D IMPLEM_NAME='"$name"' aes/aes.c aes/bs.c aes/key_sched.c aes/main.c aes/fame_lib.c -D TI=$ti -D FD=$fd $pipe_opt -o $bin};
                if ($run) {
                    say "Running it";
                    system "./$bin";
                    say "******************";
                }
            } else {
                system qq{sparc-gaisler-elf-gcc -Wall -Wextra -Wno-unused-function -mcpu=leon3 -mno-fpu -Wall -Wextra -Iarch -IFPGA-API/include -D CST_RAND -O3 -D COMPACT -D IMPLEM_NAME='"$name"' aes/aes.c aes/bs.c aes/key_sched.c aes/main.c aes/fame_lib.c -D TI=$ti -D FD=$fd $pipe_opt -o $bin -LFPGA-API/lib -lfame};
            }
        }
    }
}
