------------------------------------------------------------------------------

-----------------------------------------------------------------------------
-- Entity: 	spipeline_slice
-- File:	spipeline_slice.vhd
-- Author:	Zhimin Chen, SES, Virginia Tech
-- Description:	a slice of the 5-stage secure pipeline
------------------------------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
library grlib;
use grlib.sparc.all;
use grlib.stdlib.all;
library techmap;
use techmap.gencomp.all;
library gaisler;
use gaisler.leon3.all;
use gaisler.libiu.all;
use gaisler.arith.all;
-- use gaisler.libproc3.all;
-- pragma translate_off
use grlib.sparc_disas.all;
-- pragma translate_on

entity spipeline_dslice is
  generic (
    nwindows  : integer range 2 to 32 := 2;
    memtech   : integer range 0 to NTECH  := DEFMEMTECH
    );
  port (
    clk   : in  std_ulogic;
    rstn  : in  std_ulogic;
    holdn : in  std_ulogic;
    rfi   : in  iregfile_slice_in_type;
    rfo   : out iregfile_slice_out_type;
    rsel1 : in  std_logic_vector(2 downto 0);
    rsel2 : in  std_logic_vector(2 downto 0);
    imm   : in  std_logic_vector(0 downto 0);
    aluop : in  std_logic_vector(2 downto 0);
    alusel: in  std_logic_vector(1 downto 0);
    shleft: in  std_ulogic;
    shcnt : in  std_logic_vector(4 downto 0);
    sari  : in  std_ulogic;
    smode : in  std_ulogic;
    swreg : in  std_ulogic;
    shlin : in  std_logic_vector(30 downto 0);
    shrin : in  std_logic_vector(30 downto 0);
    shlout: out std_logic_vector(30 downto 0);
    shrout: out std_logic_vector(30 downto 0);
    rout  : out sreg;
    srd   : in  std_ulogic
    );
end;

--architecture rtl of spipeline_dslice is
--
--    component spipeline_slice
--    generic (
--        nwindows  : integer range 2 to 32 := 8;
--        memtech   : integer range 0 to NTECH  := DEFMEMTECH
--    );
--    port (
--        clk   : in  std_ulogic;
--        rstn  : in  std_ulogic;
--        holdn : in  std_ulogic;
--        rfi   : in  iregfile_slice_in_type;
--        rfo   : out iregfile_slice_out_type;
--        rsel1 : in  std_logic_vector(2 downto 0);
--        rsel2 : in  std_logic_vector(2 downto 0);
--        imm   : in  std_logic_vector(0 downto 0);
--        aluop : in  std_logic_vector(2 downto 0);
--        alusel: in  std_logic_vector(1 downto 0);
--        shleft: in  std_ulogic;
--        shcnt : in  std_logic_vector(4 downto 0);
--        sari  : in  std_ulogic;
--        smode : in  std_ulogic;
--        swreg : in  std_ulogic;
--        shlin : in  std_logic_vector(30 downto 0);
--        shrin : in  std_logic_vector(30 downto 0);
--        shlout: out std_logic_vector(30 downto 0);
--        shrout: out std_logic_vector(30 downto 0);
--        rout  : out sreg;
--        srd   : in  std_ulogic;
--	     op1   : out std_logic_vector(0 downto 0);
--	     op2   : out std_logic_vector(0 downto 0);
--	     andi  : in  std_logic_vector(0 downto 0);
--	     ori   : in  std_logic_vector(0 downto 0)
--    );
--    end component;
--
--	 component dand
--	 	  port(
--	 		   ip1:in std_logic_vector(0 downto 0);
--	 		   ip2:in std_logic_vector(0 downto 0);
--	 		   op1:out std_logic_vector(0 downto 0);
--	 		   op2:out std_logic_vector(0 downto 0)
--	 	  );
--	 end component;
--	 
--	 signal op1, op2, andi, ori : std_logic_vector(0 downto 0);
--
--begin
--
--    spipeline_slice0 : spipeline_slice
--	     generic map(nwindows, memtech)
--	     port map(clk, rstn, holdn, rfi, rfo, rsel1, rsel2, imm, aluop, alusel, shleft,
--		           shcnt, sari, smode, swreg, shlin, shrin, shlout, shrout, rout, srd,
--					  op1, op2, andi, ori);
--
--    dand0 : dand
--	     port map(op1, op2, andi, ori);
--
--end;

